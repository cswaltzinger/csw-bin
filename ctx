#!/bin/bash





# adds context functionality through the util function similar to a conda env 
CONTEXT_HOME="${HOME:-~}/.config/csw-ctx"
if [ ! -d "$CONTEXT_HOME" ]; then
    mkdir -p "$CONTEXT_HOME" "$CONTEXT_HOME/bin" "$CONTEXT_HOME/contexts"
fi





#USEFUL TO KNOW:
    #CONDA_PROMPT_MODIFIER
    #DEFAULT_PS1="%d:"
DEFAULT_PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$'
#NEW_ENV
    #CURRENT_CTX
    #CONTEXT_RC
    #

#mode change for quick debug/editing 
MODE="DEBUG"


#debug echo to be used instead of echo 
echo(){
    if [[ "$MODE" == "DEBUG" ]];then
        command echo $@
    fi
}

decho(){
    echo $@
}

# show current context and list all contexts
list(){
    ls $CONTEXT_HOME/contexts
}


# reset context functionality 
reset(){
    rm -rf $CONTEXT_HOME/contexts/*
}


# add context path to the context file
add(){
    REAL_PATH=$(pwd)
    CTX_NAME=$(basename $(pwd))
    CTX_FILE="$REAL_PATH/util"
    if [ ! -f "$CTX_FILE" ];then
        CTX_FILE="$REAL_PATH/.util"
    fi

    CTX_PATH="$CONTEXT_HOME/contexts/$CTX_NAME"
    mkdir -p "$CTX_PATH"
    ln -s "$CTX_FILE" "$CTX_PATH/util"


    if [ ! -f "$CTX_FILE" ];then
        echo -e '#!/bin/bash\n\n\n' > "$CTX_FILE"
        vim "$CTX_FILE"
    fi
}


#change current contexts 
change(){
    if [[ -z "$@" ]];then
        ls $CONTEXT_HOME/contexts
        return 1
    fi
    CONTEXT="$1"
    ln -sf "$CONTEXT_HOME/contexts/$CONTEXT" "$CONTEXT_HOME/current"
}



#deactivate current context
deactivate(){
    ln -sf "$CONTEXT_HOME/bin" "$CONTEXT_HOME/current"
    if [ -f "$CONTEXT_HOME/PS1" ];then
        export PS1=$(cat $CONTEXT_HOME/PS1)
        rm $CONTEXT_HOME/PS1
    fi
}

show(){
    echo ps1 to be implemented 
}

activate(){

    if [ -f "$CONTEXT_HOME/current/util" ];then
        echo $PS1 > $CONTEXT_HOME/PS1
        # source "$CONTEXT_HOME/current/util"
        export PS1="($(basename $(realpath $CONTEXT_HOME/current ))) $PS1"
    fi
}


__backend(){
    cd $CONTEXT_HOME
    ls -l $CONTEXT_HOME
}

run(){
    THE_FILE=$(realpath $CONTEXT_HOME/current/util)
    bash <(cat $THE_FILE ; echo "$@")

}


cmds(){
    cat "$CONTEXT_HOME/current/util" | grep -E '^[a-zA-Z0-9_]+\(\)\{' | sed 's/(){//' | sed 's/ //g'
}

$@


